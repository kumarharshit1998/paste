using Microsoft.AspNetCore.Mvc;
using OfficeOpenXml;
using System.IO;
using System.Collections.Generic;

public class AutoFillController : Controller
{
    [HttpGet]
    public IActionResult ExcelUpload()
    {
        return View();
    }

    [HttpPost]
    public IActionResult UploadExcel(IFormFile ExcelFile)
    {
        if (ExcelFile == null || ExcelFile.Length == 0)
        {
            return Json(new { success = false, message = "No file uploaded." });
        }

        ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

        using var stream = new MemoryStream();
        ExcelFile.CopyTo(stream);
        var base64 = Convert.ToBase64String(stream.ToArray());

        using var package = new ExcelPackage(stream);
        var sheetNames = new List<string>();
        foreach (var sheet in package.Workbook.Worksheets)
        {
            sheetNames.Add(sheet.Name);
        }@{
    ViewData["Title"] = "Excel Upload";
    Layout = "_Layout";
}
<h2>Excel Upload</h2>

<input type="file" id="excelFile" />
<button onclick="uploadExcel()">Upload Excel</button>

<div id="sheetSection" style="display:none; margin-top: 20px;">
    <label>Select a sheet:</label>
    <select id="sheetDropdown" onchange="sheetSelected(this)">
    </select>
</div>

<div id="nextStep" style="margin-top: 20px;"></div>

@section Scripts {
<script>
    function uploadExcel() {
        var fileInput = document.getElementById('excelFile');
        if (!fileInput.files.length) {
            alert("Please select an Excel file.");
            return;
        }

        var formData = new FormData();
        formData.append("ExcelFile", fileInput.files[0]);

        fetch("/AutoFill/UploadExcel", {
            method: "POST",
            body: formData
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                let dropdown = document.getElementById("sheetDropdown");
                dropdown.innerHTML = "";
                data.sheets.forEach(sheet => {
                    let option = document.createElement("option");
                    option.value = sheet;
                    option.textContent = sheet;
                    dropdown.appendChild(option);
                });
                document.getElementById("sheetSection").style.display = "block";
                window.uploadedExcelBase64 = data.base64;
            } else {
                alert(data.message);
            }
        })
        .catch(err => {
            console.error("Upload error:", err);
            alert("Failed to upload file.");
        });
    }

    function sheetSelected(selectElement) {
        var selectedSheet = selectElement.value;
        document.getElementById("nextStep").innerHTML =
            `<p>You selected sheet: <strong>${selectedSheet}</strong></p>
             <p>Now you can implement the next logic, like reading data or mapping columns.</p>`;
    }
</script>
}


        return Json(new
        {
            success = true,
            sheets = sheetNames,
            base64 = base64
        });
    }
}














