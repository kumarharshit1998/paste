[HttpGet]
[Authorize]
public IActionResult BulkImport()
{
    ViewBag.Stage = "Upload"; // Initial stage
    ViewData["Title"] = "Excel Import";
    return View();
}

[HttpPost]
[Authorize]
public IActionResult BulkImport(IFormFile ExcelFile, string selectedSheet, string stage)
{
    ViewData["Title"] = "Excel Import";

    // Step 1: Upload file
    if (stage == "Upload")
    {
        if (ExcelFile == null || ExcelFile.Length == 0)
        {
            ViewBag.Error = "No file uploaded.";
            ViewBag.Stage = "Upload";
            return View();
        }

        ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
        using var stream = new MemoryStream();
        ExcelFile.CopyTo(stream);
        var excelBytes = stream.ToArray();

        // Store file and sheet names in TempData
        TempData["ExcelBytes"] = Convert.ToBase64String(excelBytes);
        TempData.Keep("ExcelBytes");

        using var package = new ExcelPackage(new MemoryStream(excelBytes));
        var sheetNames = new List<string>();
        foreach (var sheet in package.Workbook.Worksheets)
        {
            sheetNames.Add(sheet.Name);
        }

        ViewBag.SheetNames = sheetNames;
        ViewBag.Stage = "SelectSheet";
        return View();
    }

    // Step 2: Sheet selection
    if (stage == "SelectSheet")
    {
        var excelBase64 = TempData["ExcelBytes"] as string;
        if (string.IsNullOrEmpty(excelBase64))
        {
            ViewBag.Error = "Session expired. Please upload the file again.";
            ViewBag.Stage = "Upload";
            return View();
        }

        var excelBytes = Convert.FromBase64String(excelBase64);
        TempData["ExcelBytes"] = excelBase64;
        TempData.Keep("ExcelBytes");

        using var stream = new MemoryStream(excelBytes);
        using var package = new ExcelPackage(stream);
        var sheet = package.Workbook.Worksheets[selectedSheet];

        if (sheet == null)
        {
            ViewBag.Error = "Selected sheet not found.";
            ViewBag.Stage = "Upload";
            return View();
        }

        var headers = new List<string>();
        for (int col = 1; col <= sheet.Dimension.End.Column; col++)
        {
            headers.Add(sheet.Cells[1, col].Text);
        }

        ViewBag.Headers = headers;
        ViewBag.Stage = "ShowTable";
        ViewBag.SelectedSheet = selectedSheet;
        TempData["SelectedSheet"] = selectedSheet;

        return View();
    }

    // Default fallback
    ViewBag.Error = "Invalid operation.";
    ViewBag.Stage = "Upload";
    return View();
}
