public async Task InsertAutoFillAsync(SHAWAutofillModel m)
        {
            // 1) Create & open connection
            await using var conn = new SqlConnection(_connStr);
            await conn.OpenAsync();

            // 2) Create command
            await using var cmd = conn.CreateCommand();
            cmd.CommandText  = "usp_LMG_InsertSHAWAutoFill";   // your proc name
            cmd.CommandType  = CommandType.StoredProcedure;

            // 3) Add parameters (12 total here – adjust as needed)
            cmd.Parameters.Add("@AccountNum",      SqlDbType.VarChar, 20).Value = m.AccountNumber      ?? (object)DBNull.Value;
            cmd.Parameters.Add("@AccrStat",        SqlDbType.VarChar, 10).Value = m.AccrStat           ?? (object)DBNull.Value;
            cmd.Parameters.Add("@CostCtr",         SqlDbType.VarChar, 15).Value = m.CostCtr            ?? (object)DBNull.Value;
            cmd.Parameters.Add("@Approvoff",       SqlDbType.VarChar, 10).Value = m.Approvoff          ?? (object)DBNull.Value;
            cmd.Parameters.Add("@RelMgr",          SqlDbType.VarChar, 10).Value = m.RelMgr             ?? (object)DBNull.Value;
            cmd.Parameters.Add("@CollCode",        SqlDbType.VarChar, 10).Value = m.CollCode           ?? (object)DBNull.Value;

            cmd.Parameters.Add("@OrigTerm",        SqlDbType.Int            ).Value = m.OrigTerm;
            cmd.Parameters.Add("@PastDue",         SqlDbType.Int            ).Value = m.PastDue;
            cmd.Parameters.Add("@DPD",             SqlDbType.Int            ).Value = m.DPD;
            cmd.Parameters.Add("@PaysMadeNum",     SqlDbType.Int            ).Value = m.PaysMadeNum;

            cmd.Parameters.Add("@ProdCode",        SqlDbType.VarChar, 10).Value = m.ProdCode           ?? (object)DBNull.Value;
            cmd.Parameters.Add("@LoanSrcCd",       SqlDbType.VarChar, 10).Value = m.LoanSrcCd          ?? (object)DBNull.Value;

            // 4) Execute – because the proc only INSERTs and returns nothing
            await cmd.ExecuteNonQueryAsync();
        }
